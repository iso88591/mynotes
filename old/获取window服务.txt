mwinWindowManager = (WindowManager) mContext.getSystemService(Context.WINDOW_SERVICE);
//设置WindowManager.LayoutParams的属性
WindowManager.LayoutParams params = new WindowManager.LayoutParams();
//类型
if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {//6.0
	params.type = WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY;
} else {
	params.type = WindowManager.LayoutParams.TYPE_SYSTEM_ALERT;
}
//flags
//如果设置了WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE，弹出的View没焦点，收不到Back键的事件
//当按Back、Home键时，背景应用退出，弹出的view就可以悬浮在桌面了。
params.flags = WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM;
params.format = PixelFormat.TRANSLUCENT;
params.width = ViewGroup.LayoutParams.MATCH_PARENT;
params.height = ViewGroup.LayoutParams.MATCH_PARENT;
params.gravity = Gravity.CENTER;

//初始化View
mView = initView(mContext);

//点击back键，关闭window
mView.setOnKeyListener(new View.OnKeyListener() {

	@Override
	public boolean onKey(View v, int keyCode, KeyEvent event) {
		Log.d("wxx", "onKey");
		switch (keyCode) {
			case KeyEvent.KEYCODE_BACK:
				Log.d("wxx", "onKey BACK");
				hideMyWindow();
				return true;

			default:
				return false;
		}
	}
});

mwinWindowManager.addView(mView, params);
isShow = true;

==============================================================================================================
需要权限
<uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>